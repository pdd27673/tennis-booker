apiVersion: v1
kind: ServiceMonitor
metadata:
  name: tennis-court-retention-service
  namespace: tennis-booker
  labels:
    app: tennis-court-retention-service
    component: data-retention
spec:
  selector:
    matchLabels:
      app: tennis-court-retention-service
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: tennis-court-retention-alerts
  namespace: tennis-booker
  labels:
    app: tennis-court-retention-service
    component: data-retention
spec:
  groups:
  - name: retention-service.rules
    rules:
    
    # Job failure alerts
    - alert: RetentionServiceJobFailed
      expr: kube_job_status_failed{job_name=~"tennis-court-retention-service-.*"} > 0
      for: 0m
      labels:
        severity: critical
        component: data-retention
      annotations:
        summary: "Tennis Court Retention Service job failed"
        description: "The retention service job {{ $labels.job_name }} has failed. Check logs for details."
    
    # Job taking too long
    - alert: RetentionServiceJobRunningTooLong
      expr: time() - kube_job_status_start_time{job_name=~"tennis-court-retention-service-.*"} > 7200
      for: 0m
      labels:
        severity: warning
        component: data-retention
      annotations:
        summary: "Tennis Court Retention Service job running too long"
        description: "The retention service job {{ $labels.job_name }} has been running for more than 2 hours."
    
    # No recent successful runs
    - alert: RetentionServiceNoRecentSuccess
      expr: time() - kube_job_status_completion_time{job_name=~"tennis-court-retention-service-.*", condition="Complete"} > 172800
      for: 0m
      labels:
        severity: warning
        component: data-retention
      annotations:
        summary: "Tennis Court Retention Service hasn't completed successfully recently"
        description: "The retention service hasn't completed successfully in the last 48 hours."
    
    # CronJob suspended
    - alert: RetentionServiceCronJobSuspended
      expr: kube_cronjob_spec_suspend{cronjob="tennis-court-retention-service"} == 1
      for: 5m
      labels:
        severity: warning
        component: data-retention
      annotations:
        summary: "Tennis Court Retention Service CronJob is suspended"
        description: "The retention service CronJob is currently suspended and will not run scheduled jobs."

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: retention-service-dashboard
  namespace: tennis-booker
  labels:
    app: tennis-court-retention-service
    component: data-retention
    grafana_dashboard: "1"
data:
  dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Tennis Court Retention Service",
        "tags": ["tennis-booker", "retention", "data-cleanup"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Job Success Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(kube_job_status_succeeded{job_name=~\"tennis-court-retention-service-.*\"}[7d]) * 100",
                "legendFormat": "Success Rate %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "min": 0,
                "max": 100,
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 80},
                    {"color": "green", "value": 95}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Last Job Duration",
            "type": "stat",
            "targets": [
              {
                "expr": "kube_job_status_completion_time{job_name=~\"tennis-court-retention-service-.*\"} - kube_job_status_start_time{job_name=~\"tennis-court-retention-service-.*\"}",
                "legendFormat": "Duration (seconds)"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "s",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": 0},
                    {"color": "yellow", "value": 3600},
                    {"color": "red", "value": 7200}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Job History",
            "type": "table",
            "targets": [
              {
                "expr": "kube_job_info{job_name=~\"tennis-court-retention-service-.*\"}",
                "format": "table"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {
          "from": "now-7d",
          "to": "now"
        },
        "refresh": "5m"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: retention-service-log-config
  namespace: tennis-booker
  labels:
    app: tennis-court-retention-service
    component: data-retention
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
    
    [INPUT]
        Name              tail
        Path              /var/log/*.log
        Parser            json
        Tag               retention-service
        Refresh_Interval  5
    
    [FILTER]
        Name                kubernetes
        Match               retention-service.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
    
    [OUTPUT]
        Name  es
        Match *
        Host  elasticsearch.logging.svc.cluster.local
        Port  9200
        Index retention-service-logs
        Type  _doc
  
  parsers.conf: |
    [PARSER]
        Name        json
        Format      json
        Time_Key    timestamp
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

---
apiVersion: batch/v1
kind: Job
metadata:
  name: retention-service-test-job
  namespace: tennis-booker
  labels:
    app: tennis-court-retention-service
    component: data-retention
    job-type: test
spec:
  template:
    metadata:
      labels:
        app: tennis-court-retention-service
        component: data-retention
        job-type: test
    spec:
      restartPolicy: Never
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      
      containers:
      - name: retention-service-test
        image: tennis-booker/retention-service:latest
        imagePullPolicy: IfNotPresent
        
        command: ["./retention-service"]
        args: ["test"]
        
        env:
        - name: RETENTION_DRY_RUN
          value: "true"
        - name: RETENTION_LOG_LEVEL
          value: "debug"
        - name: DATABASE_NAME
          value: "tennis_booker"
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: tennis-booker-secrets
              key: mongo-uri
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        volumeMounts:
        - name: test-logs
          mountPath: /var/log
      
      volumes:
      - name: test-logs
        emptyDir: {} 