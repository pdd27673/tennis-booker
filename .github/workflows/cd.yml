name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
          cache-dependency-path: apps/backend/go.sum
      
      - name: Build
        run: |
          cd apps/backend
          make build
      
      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-binaries
          path: apps/backend/bin/
          retention-days: 7
  
  build-scraper:
    name: Build Scraper
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: apps/scraper/requirements.txt
      
      - name: Install dependencies
        run: |
          cd apps/scraper
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Playwright browsers
        run: |
          cd apps/scraper
          python -m playwright install --with-deps chromium
      
      - name: Create package
        run: |
          cd apps/scraper
          pip install wheel
          python -m pip install --upgrade build
          python -m build
      
      - name: Upload scraper artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scraper-package
          path: apps/scraper/dist/
          retention-days: 7
  
  deploy:
    name: Deploy to OCI
    needs: [build-backend, build-scraper]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Set up OCI CLI
        uses: oracle-actions/setup-oci@v1
        with:
          user-id: ${{ secrets.OCI_USER_OCID }}
          fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          private-key: ${{ secrets.OCI_PRIVATE_KEY }}
          tenancy-id: ${{ secrets.OCI_TENANCY_OCID }}
          region: ${{ secrets.OCI_REGION }}
      
      - name: Deploy to OCI
        run: |
          echo "Deploying version ${GITHUB_REF#refs/tags/}"
          # Add your OCI deployment commands here
          # Example: terraform apply or custom deployment script 